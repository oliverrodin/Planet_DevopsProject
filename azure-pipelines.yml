# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

#variables:
#  solution: '**/*.sln'
#  buildPlatform: 'Any CPU'
#  buildConfiguration: 'Release'

#steps:
#- task: NuGetToolInstaller@1

#- task: NuGetCommand@2
#  inputs:
#    restoreSolution: '$(solution)'

#- task: DotNetCoreCLI@2
#  displayName: 'Run unit tests - $(buildConfiguration)'
#  inputs:
#    command: 'test'
#    arguments: '--no-build --configuration $(buildConfiguration)'
#    publishTestResults: false
#    projects: '**/*.NUnitTest.csproj'


#- task: VSBuild@1
#  inputs:
#    solution: '$(solution)'
#    platform: '$(buildPlatform)'
#    configuration: '$(buildConfiguration)'



#- task: VSTest@2

variables:
  buildConfiguration: 'Release'



steps:

- task: DotNetCoreCLI@2
  inputs:
    command: test
    projects: '**/*Test/*.csproj'
    arguments: '--configuration $(buildConfiguration)'


- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'



- task: DotNetCoreCLI@2
  displayName: 'dotnet publish --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
  inputs:
    command: publish
    publishWebProjects: false
    projects: 'src/SimpleApi/SimpleApi.csproj'
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true



- task: PublishBuildArtifacts@1
  displayName: 'publish artifacts'